snippet include
	#include <${1:iostream}>
	${2}

snippet once
	#ifndef ${1:`toupper(Filename('$1_H', 'UNTITLED_H'))`}
	#define $1
		${2}
	#endif

snippet cmain
	int main( int argc, const char *argv[] ) {
		${1}
		return 0;
	}

snippet printf
	printf("${1:%s}\n"${2});${3}

snippet fprintf
	fprintf(${1:stderr}, "${2:%s}\n"${3});${4}

snippet for
	for ( int ${1:i} = ${2:0}; $1 < ${3:10}; $1${4:++} ) {
		${5}
	}

snippet while
	while ( ${1} ) {
		${2}
	}

snippet do
	do {
		${2}
	} while ( ${1} );

snippet if
	if ( ${1} ) {
		${2}
	}

snippet else
	else {
		${1}
	}

snippet elseif
	if ( ${1} ) {
		${2}
	} else {
	
	}

snippet switch
	switch ( ${1} ) {
		case ${2}:
			${3}
			break;
		default:
	}

snippet case
	case ${1}:
		${2}
		break;

snippet proc
	void ${1:procedure}(${2}) {
		${3}
	}

snippet func
	${1:int} ${2:function}(${3}) {
		${4}
		return 0;
	}

snippet typedef
	typedef ${1:int} ${2:t};${3}

snippet struct
	struct ${1:t`Filename('$1', 'Name')`} {
		${2}
	};

snippet enum
	enum ${1:t`Filename('$1', 'Name')`} {
		${2}
	};
